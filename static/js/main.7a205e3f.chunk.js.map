{"version":3,"sources":["Filter.js","dataTable.js","admin.js","user.js","Should.js","Header.js","Can.js","CustomRoute.js","loader.js","Route.js","serviceWorker.js","store.js","index.js"],"names":["Filter","_ref","type","filterOnName","filterOnDob","isChecked","react_default","a","createElement","index_es","onClick","checked","SimpleTable","props","data","Paper_default","src_Filter","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","item","id","component","scope","username","scopre","dob","role","getData","users","undefined","filter","user","Admin","store","_store$state","state","Fragment","style","marginTop","dataTable","User","className","Should","loggedInUser","roles","children","includes","withStyles","root","flexGrow","menuButton","marginLeft","marginRight","classes","AppBar_default","position","Toolbar_default","variant","IconButton_default","color","aria-label","Menu_default","Typography_default","src_Should","react_router_dom","to","Can","UserRoute","WrappedComponent","_React$Component","_class","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","Header","react_router","React","Component","path","Loader","Routes","_this","loader","CustomRoute","admin","compose","withState","lifecycle","componentDidMount","_this2","fetch","headers","method","then","res","json","updateState","setLoggedIn","Boolean","window","location","hostname","match","Store","createContext","AppStore","_temp","_getPrototypeOf2","_len","length","args","Array","_key","call","concat","Author","setState","prevState","defineProperty","_ref2","target","sort","b","_ref3","readOnly","assign","Root","Provider","Consumer","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a205e3f.chunk.js","sourcesContent":["import React from 'react';\nimport { Checkbox } from '@material-ui/core';\n\nconst Filter = ({type,filterOnName,filterOnDob,isChecked}) =>{\n    return(\n        <div>\n            <label>username</label>\n            <Checkbox onClick={filterOnName} checked={isChecked==='name'}/>\n            <label>dob</label>\n            <Checkbox onClick={filterOnDob} checked={isChecked==='dob'}/>\n        </div>\n    )\n}\n\nexport default Filter;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Filter from './Filter';\n\nconst SimpleTable = (props) =>{\n    const {data,filterOnName,filterOnDob,isChecked} = props;\n    return <Paper>\n            <Filter filterOnDob={filterOnDob} filterOnName={filterOnName} isChecked={isChecked}/>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>username</TableCell>\n                        <TableCell>dob</TableCell>\n                        <TableCell align=\"right\">role</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.map(item =>(\n                        <TableRow id={item.id}>\n                            <TableCell component=\"th\" scope=\"row\">{item.username}</TableCell>\n                            <TableCell component=\"th\" scopre=\"row\">{item.dob}</TableCell>\n                            <TableCell align=\"right\">{item.role}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n    </Paper>\n}\n\nexport default SimpleTable;","import React from 'react';\nimport SimpleTable from './dataTable';\n\nfunction getData(users,type){\n    if(users === undefined)return [];\n    return users.filter(user => user.role === type);\n}\nconst Admin = ({store}) =>{\n    const {state:{users,isChecked}} = store;\n    const {filterOnName,filterOnDob} = store;\n    return <React.Fragment>\n        <h1 style={{\n            marginTop:'10%'\n        }}> Admin Panel</h1>\n        <SimpleTable isChecked={isChecked} data={getData(users,'admin')} filterOnDob={filterOnDob} filterOnName={filterOnName} />\n    </React.Fragment>\n}\n\nexport default Admin;","import React from 'react';\nimport SimpleTable from './dataTable';\n\nfunction getData(users,type){\n    if(users === undefined)return [];\n    return users.filter(user => user.role === type);\n}\n\nconst User = ({store}) =>{\n    const {state:{users,isChecked}} = store;\n    const {filterOnName,filterOnDob} = store;\n    return <React.Fragment>\n        <div className=\"flex-equal\">\n            <h1>users</h1>\n            <SimpleTable data={getData(users,'user')} filterOnName={filterOnName} filterOnDob={filterOnDob} isChecked={isChecked}/>\n        </div>\n    </React.Fragment>\n}\n\nexport default User;","import React from 'react';\n\nconst Should = ({loggedInUser,roles,children}) =>{\n    if(loggedInUser === undefined) return <React.Fragment />\n    if(roles.includes(loggedInUser.role)) return <React.Fragment>{children}</React.Fragment>\n    else return <React.Fragment/>\n}\n\nexport default Should;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {NavLink} from 'react-router-dom';\nimport Should from './Should';\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -18,\n    marginRight: 10,\n  },\n};\n\nfunction DenseAppBar(props) {\n  const { classes,loggedInUser } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Welcome {loggedInUser.username}\n          </Typography>\n          <Typography variant=\"h6\" color=\"inherit\">\n\n          <Should roles={[\"user\"]} loggedInUser={loggedInUser}>\n            <NavLink to=\"/user\">User</NavLink>\n          </Should>\n\n          </Typography>\n          <Typography variant=\"h6\" color=\"inherit\">\n            <Should roles={[\"admin\"]} loggedInUser={loggedInUser}>\n                <NavLink to=\"/admin\">Admin</NavLink>\n            </Should>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nDenseAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DenseAppBar);\n\n","import React from 'react';\nimport Header from './Header';\nimport {Redirect} from 'react-router-dom';\nfunction Can(WrappedComponent){\n    return class extends React.Component{\n        render(){\n            const{loggedInUser,roles} = this.props;\n            if(roles.includes(loggedInUser.role))\n                return(\n                    <React.Fragment>\n                        <Header loggedInUser={loggedInUser} />\n                        <WrappedComponent  {...this.props} />\n                    </React.Fragment>\n                )\n            return (\n                <React.Fragment>\n                    <Redirect to=\"/\" />\n                </React.Fragment>\n            )\n        }\n    }\n}\nexport default Can; ","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport Can from './Can';\n\nconst User_Route = ({path,component,loggedInUser,roles}) =>{\n    return<Route component={component} />\n}\n\nconst UserRoute = Can(User_Route);\nexport default UserRoute;","import React from 'react';\n\nconst Loader =() =>(\n    <div className=\"loader\" />\n)\nexport default Loader;","import React from 'react';\nimport { BrowserRouter,Switch } from 'react-router-dom'\nimport Admin from './admin';\nimport User from './user';\nimport Header from './Header';\nimport Route from './CustomRoute';\nimport Loader from './loader';\nimport {lifecycle,withState,compose} from 'recompose';\nimport './App.css';\n\nclass Routes extends React.Component{\n    render(){\n        const {loggedInUser} = this.props;\n        if(loggedInUser === undefined ) return <Loader />;\n        return(\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/admin\" component={() =><Admin {...this.props}/>} loggedInUser={loggedInUser} roles={[\"admin\"]} />\n                    <Route path=\"/user\" component={() => <User {...this.props}/>} loggedInUser={loggedInUser} roles={[\"user\"]} />\n                    <Header loggedInUser={loggedInUser}/>\n                </Switch>\n            </BrowserRouter>\n        )\n    }\n}\n\nfunction componentDidMount(){\n    /*\n        mock the api using the following command\n        json-server --watch db.json -d 1000\n    */\n    const url = 'http://localhost:5000/users';\n    fetch(url,{\n        headers:{\n            method:'GET'\n        }\n    }).then(res =>res.json()).then(data =>{\n        const {store:{updateState}} = this.props;\n        updateState('users',data)\n        this.props.setLoggedIn(data[0]);\n    });\n}\n\nexport default compose(\n    withState('loggedInUser','setLoggedIn',undefined),\n    lifecycle({componentDidMount})\n)(Routes)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nconst Store = React.createContext();\n\n\nconst createStore = () =>{\n     return class extends React.Component{\n         state ={\n            Author:\"Anwarulhaq\",\n            users:[],\n            isChecked:undefined\n         }\n\n         updateState = (key ,value) =>{\n                this.setState(prevState =>{\n                    return {[key] : value};\n                });\n         }\n\n         filterOnDob =({target}) =>{\n            if(target.checked)\n            {\n                const users = this.state.users;\n                const data = users.sort(function(a,b){\n                    return a.dob > b.dob;\n                });\n                this.setState({users:data,isChecked:'dob'});\n            }else{\n                this.setState({isChecked:undefined})\n            }\n         }\n\n         filterOnName = ({target}) =>{\n             if(target.checked)\n                {\n                    const users = this.state.users;\n                    const data = users.sort(function(a,b){\n                        return a.username > b.username;\n                    });\n                    this.setState({users:data,isChecked:'name'});\n                }else{\n                    this.setState({isChecked:undefined})\n                }\n         }\n\n         readOnly = () =>{\n            const state = Object.assign({},this.state,this.state)\n            let newObj = {\n                get:function(){return state}\n            }\n            return newObj.get();\n         }\n\n         render(){\n             const {Root} = this.props;\n            return <Store.Provider value={{\n                store:{\n                    state:this.state,\n                    updateState:this.updateState,\n                    readOnly:this.readOnly,\n                    filterOnDob:this.filterOnDob,\n                    filterOnName:this.filterOnName\n                }\n            }}>\n                    <Store.Consumer>\n                        {(store) =>(\n                            <React.Fragment>\n                               <Root {...store} />\n                            </React.Fragment>\n                        )}\n                    </Store.Consumer>\n            </Store.Provider>\n         }\n    }\n}\n\nexport default createStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss'\nimport Routes from './Route';\nimport * as serviceWorker from './serviceWorker';\nimport createStore from './store';\nconst AppStore =createStore();\nconst App =() =><AppStore Root={Routes} />\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}